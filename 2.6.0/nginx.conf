events {
    worker_connections 1024;
}

stream {
    # Define upstream servers for NiFi cluster
    upstream nifi_cluster {
        # Use consistent hashing based on client IP for session affinity
        hash $remote_addr consistent;
        
        # NiFi cluster nodes
        server nifi0:8443 max_fails=3 fail_timeout=30s;
        server nifi1:8443 max_fails=3 fail_timeout=30s;
    }

    # Load balancer configuration for HTTPS traffic
    server {
        listen 8443;
        proxy_pass nifi_cluster;
        
        # Connection settings
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_connect_timeout 1s;
        
        # Enable session persistence
        proxy_bind $remote_addr transparent;
    }
}

# HTTP configuration for health checks and redirects
http {
    # Basic HTTP settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;
    
    # Define upstream for HTTP health checks
    upstream nifi_http_cluster {
        server nifi0:8443;
        server nifi1:8443;
    }
    
    # HTTP server for health checks and redirects
    server {
        listen 80;
        server_name localhost;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host:8443$request_uri;
        }
    }
}