events {
    worker_connections 1024;
}

http {
    # Basic HTTP settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100m;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging with additional upstream information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;
    
    # Define upstream servers for NiFi cluster with sticky sessions
    upstream nifi_cluster {
        # Use IP hash for session affinity (sticky sessions)
        ip_hash;
        
        # NiFi cluster nodes - using internal container ports
        server nifi0:8443 max_fails=3 fail_timeout=30s;
        server nifi1:8443 max_fails=3 fail_timeout=30s;
        server nifi2:8443 max_fails=3 fail_timeout=30s;
    }
    
    # HTTPS server for NiFi load balancing with SSL termination
    server {
        listen 8443 ssl;
        server_name localhost;
        
        # SSL configuration using NiFi certificates
        ssl_certificate /opt/certs/nifi-cert.pem;
        ssl_certificate_key /opt/certs/nifi-key.key;
        
        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Proxy settings for NiFi
        location / {
            proxy_pass https://nifi_cluster;
            proxy_ssl_verify off;  # Accept self-signed certificates from NiFi backends
            proxy_ssl_session_reuse on;
            
            # Essential proxy headers for NiFi
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-Server $host;
            
            # WebSocket support for NiFi
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts and buffering
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Handle redirects properly
            proxy_redirect off;
        }
        
        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # HTTP server for health checks and redirects
    server {
        listen 80;
        server_name localhost;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host:8444$request_uri;
        }
    }
}